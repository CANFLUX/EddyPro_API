[
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "EddyPro API",
    "section": "",
    "text": "import pandas as pd\nimport configparser\nimport importlib\nimport datetime as dt\nimport eddyProAPI\nimportlib.reload(eddyProAPI)\n\nimport os\n\nsiteID = 'SCL'\n\neP = eddyProAPI.eddyProAPI(runMode=0,siteID=siteID)\n\nf = eP.config['Paths']['sourceDir']+'/2024/07/'+os.listdir(eP.config['Paths']['sourceDir']+'/2024/07/')[-1]\n\npd.read_csv(f,**eP.config['dat']['fileDescription'])\n\nself = eP\nfor sec,value in eP.GHG_Metadata_Template.items():\n    if sec != 'DEFAULT' and sec not in ['Instruments','FileDescription']:\n        print(sec)\n        print()\n        for key,val in value.items():\n            if val != '':\n                try:\n                    print(key,eval(val))\n                except:\n                    cc = compile(f\"{val} = input(key)\",'&lt;string&gt;','single')\n                    print(key,eval(cc))\n                    pass\n    elif sec in ['Instruments','FileDescription']:\n        print(sec)\n\nprint(eP.altitude)\n\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\SCL\\metadata\\fileInventory.csv\nProject\n\ntitle GHG_Metadata_Template\nid GHG_Metadata_Template\ncreation_date 2024-10-10 08:44:55\nlast_change_date 2024-10-10 08:44:55\nfile_name c:\\Users\\jskeeter\\CANFLUX\\EddyPro_API/SCL_GHG_Metadata.metadata\nFiles\n\nSite\n\nsite_name SCL\nsite_id SCL\naltitude None\nlatitude None\nlongitude None\ncanopy_height None\nStation\n\nstation_name SCL\nstation_id SCL\nTiming\n\nInstruments\nFileDescription\n4\n\n\n\neP.GHG_Metadata_Template\nimport fnmatch\n# list(eP.GHG_Metadata_Template['Instruments'].keys())\n# fnmatch.filter(list(eP.GHG_Metadata_Template['Instruments'].keys()),'instr_*_model')\n# max(\ndef catch(func, handle=lambda e : e, *args, **kwargs):\n    try:\n        return func(*args, **kwargs)\n    except Exception as e:\n        pass\n[catch(lambda: int(i.split('_')[1]))\nfor i in fnmatch.filter(list(eP.GHG_Metadata_Template['Instruments'].keys()),'instr_*_model')\nif catch(lambda: int(i.split('_')[1])) is not None]\n# )\n# 'FileDescription':max([int(i.split('_')[1]) for i in fnmatch.filter(list(groupMetaData['FileDescription'].keys()),'col_*_variable')])\n\n[]\n\n\n\ndef catch(func, handle=lambda e : e, *args, **kwargs):\n    try:\n        return func(*args, **kwargs)\n    except Exception as e:\n        pass\neggs = (1,3,0,3,2)\n[catch(lambda : 1/egg) for egg in eggs if catch(lambda : 1/egg) is not None]\n\n[1.0, 0.3333333333333333, 0.3333333333333333, 0.5]\n\n\n\nimport pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(index=[1,2],data = {('A','a'):[0,0],('B','b'):[1,2]})\nfor i,row in df.iterrows():\n    t = {L:{\n        i[0]:str(v) if ~np.isnan(v) else '~' for i,v in row[L].items() \n        } for L in \n        row.index.get_level_values(0)\n            }\n    print(list(t.keys()))\n\n['A', 'B']\n['A', 'B']\n\n\n\ndef most_common(lst):\n    return max(set(lst), key=lst.count)\nlst = ['a','a','b']\nmost_common(lst)\n\n'a'"
  },
  {
    "objectID": "API_Run.html",
    "href": "API_Run.html",
    "title": "EddyPro API",
    "section": "",
    "text": "This notebook gives an outline for working with the API.\nimport os\nos.chdir(\"C:\\\\Users\\\\jskeeter\\\\CANFLUX\\\\EddyPro_API\")\nimport eddyProAPI\nimport importlib\nimportlib.reload(eddyProAPI)\nkwargs = {\n    'siteID':'BB',\n    'dateRange':['2023-06-15 20:00','2023-12-31 23:59'],\n    # 'sourceDir':[\"Y:/BB/raw/2019\"],#,\"Y:/BB/raw/2024\"],\n    'sourceDir':[\"C:/Users/jskeeter/CANFLUX/highfreq/BB/raw/2023\"],#,\"Y:/BB/raw/2024\"],\n    'reset':True,\n    'metaDataUpdates':'C:/Users/jskeeter/CANFLUX/highfreq/BB/Manual_Metadata_Updates.csv',\n    'priority':'High Priority',\n    'runMode':'2',\n    # 'processes':1,\n    # 'debug':True,\n    'biometUser':True\n}\n\n# python eddyProAPI.py --siteID BB --biometUser True --metaDataUpdates Y:/BB/Manual_Metadata_Updates.csv --eddyProStaticConfig Templates/ClosedPathStandard.eddypro --dateRange 2023-01-01 2024-08-30 --sourceDir Y:/BB/raw/2023 Y:/BB/raw/2024 --debug False --runMode 1\neP = eddyProAPI.eddyProAPI(**kwargs)\n\nDeleting contents of :\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\metadata\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\eddyProAPIOutputs\nBiomet user: Querying database for up-to-date biomet data\nGenerating requested files tasks for BB over: ['2023-06-15 20:00' '2023-12-31 23:59']\nSee output: C:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\metadata/BB_biometData.csv\ncanopy_height missing, outputting NaNs\n\n\nC:\\Users\\jskeeter\\CANFLUX\\Biomet.net\\Python\\csvFromBinary.py:82: FutureWarning: 'S' is deprecated and will be removed in a future version, please use 's' instead.\n  DT = pd.to_datetime(tv-config['dbase_metadata']['timestamp']['base'],unit=config['dbase_metadata']['timestamp']['base_unit']).round('S')\nC:\\Users\\jskeeter\\CANFLUX\\Biomet.net\\Python\\csvFromBinary.py:82: FutureWarning: 'S' is deprecated and will be removed in a future version, please use 's' instead.\n  DT = pd.to_datetime(tv-config['dbase_metadata']['timestamp']['base'],unit=config['dbase_metadata']['timestamp']['base_unit']).round('S')\n\n\nSee output: C:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\metadata/BB_dynamicMetadata.csv\nSearching C:/Users/jskeeter/CANFLUX/highfreq/BB/raw/2023/08\nFiles Search Complete, time elapsed:  0.006\nReading Data for:\n2023-8\n25824 0.0\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\raw\\2023\\08\\2023-08-01T120000_AIU-0446.ghg complete, time elapsed:git  0.309\n25824 0.0\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\raw\\2023\\08\\2023-08-01T123000_AIU-0446.ghg complete, time elapsed:git  0.325\n25824 0.0\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\raw\\2023\\08\\2023-08-01T130000_AIU-0446.ghg complete, time elapsed:git  0.381\n25824 0.0\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\raw\\2023\\08\\2023-08-01T133000_AIU-0446.ghg complete, time elapsed:git  0.327\n25824 0.0\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\raw\\2023\\08\\2023-08-01T140000_AIU-0446.ghg complete, time elapsed:git  0.31\n25824 0.0\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\raw\\2023\\08\\2023-08-01T143000_AIU-0446.ghg complete, time elapsed:git  0.331\n25824 0.0\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\raw\\2023\\08\\2023-08-01T150000_AIU-0446.ghg complete, time elapsed:git  0.314\n25824 0.0\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\raw\\2023\\08\\2023-08-01T153000_AIU-0446.ghg complete, time elapsed:git  0.327\n2023-8 complete in :  0.338\nReading Complete, total time elapsed:  2.637\nApplying Manual Metadata Adjustments\n2023-03-17 15:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_northward_separation') 9.72\n2023-03-17 15:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_eastward_separation') -2.42\n2023-03-17 15:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_vertical_separation') 0.0\n2023-03-17 15:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_tube_length') 56.0\n2023-03-17 15:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_tube_diameter') 5.33\n2023-03-17 15:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_3_northward_separation') 34.45\n2023-03-17 15:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_3_eastward_separation') -48.9\n2023-03-17 15:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_3_vertical_separation') 0.0\n2024-03-07 13:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_northward_separation') 6.79\n2024-03-07 13:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_eastward_separation') -1.69\n2024-03-07 13:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_vertical_separation') 0.0\n2024-03-07 13:00:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_tube_length') 65.0\n2023-07-21 00:00:00 2023-11-07 11:00:00 ('Site', 'site_name') BurnsBog2018\n2023-07-21 00:00:00 2023-11-07 11:00:00 ('Site', 'canopy_height') 0.3\n2023-07-21 00:00:00 2023-11-07 11:00:00 ('Station', 'station_name') GeogFlux\n2023-07-21 00:00:00 2023-11-07 11:00:00 ('Instruments', 'instr_1_height') 1.8\n2023-07-21 00:00:00 2023-11-07 11:00:00 ('Instruments', 'instr_1_north_offset') 166.0\n2023-07-21 00:00:00 2023-11-07 11:00:00 ('FileDescription', 'col_18_instrument') csat3_1\n2023-07-21 00:00:00 2023-11-07 11:00:00 ('FileDescription', 'col_19_instrument') csat3_1\n2023-07-21 00:00:00 2023-11-07 11:00:00 ('FileDescription', 'col_20_instrument') csat3_1\n2023-07-21 00:00:00 2023-11-07 11:00:00 ('FileDescription', 'col_21_instrument') csat3_1\n2024-04-16 12:30:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_northward_separation') 7.76\n2024-04-16 12:30:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_eastward_separation') -1.94\n2024-04-16 12:30:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_vertical_separation') 0.0\n2024-04-16 12:30:00 2023-08-01 15:30:00 ('Instruments', 'instr_2_tube_length') 114.0\nGrouping by Configuration\n\n\nC:\\Users\\jskeeter\\CANFLUX\\EddyPro_API\\eddyProAPI.py:377: FutureWarning: DataFrameGroupBy.grouper is deprecated and will be removed in a future version of pandas.\n  index = self.metaDataValues.index)\n\n\nWriting Metadata Files\nC:\\Users\\jskeeter\\CANFLUX\\highfreq\\BB\\metadata/group_1_ColDefs.eddypro\nApplying Filters:\nSonic_Filter :\ncondition_1\n0\nLI7200_Filter :\ncondition_1\n0\ncondition_2\n0\nPre-Processing complete, time elapsed 3.65 seconds\nCreating C:\\Users\\jskeeter\\CANFLUX\\EddyPro_API\\temp\\group_1_rp_A.eddypro for 8 files\nCreating C:\\Users\\jskeeter\\CANFLUX\\EddyPro_API\\temp\\group_1_fcc.eddypro for 8 files\nInitiating EddyPro Runs on 1 cores at High Priority priority\n\n\nC:\\Users\\jskeeter\\CANFLUX\\EddyPro_API\\eddyProAPI.py:701: FutureWarning: The 'keep_date_col' keyword in pd.read_csv is deprecated and will be removed in a future version. Explicitly remove unwanted columns after parsing instead.\n  Temp = Temp.set_index(list(kwargs['parse_dates'].keys())[0]).sort_index()\nC:\\Users\\jskeeter\\CANFLUX\\EddyPro_API\\eddyProAPI.py:701: FutureWarning: Support for nested sequences for 'parse_dates' in pd.read_csv is deprecated. Combine the desired columns with pd.to_datetime after parsing instead.\n  Temp = Temp.set_index(list(kwargs['parse_dates'].keys())[0]).sort_index()\n\n\nSaving As \n C:\\Users\\jskeeter\\CANFLUX\\EddyPro_API\\temp\\group_1/eddypro_group_1_fcc_fluxnet.csv\nrunEP complete, time elapsed 58.808 seconds\n# eP.config['BiometUser']\n\n{'Biomet.net': 'C:/Biomet.net/', 'Database': 'C:/Database/'}\neP.fileType\n\n'ghg'\n# eP.fileInventory.loc[eP.fileInventory.index.year==2019].groupby('groupID').count()['filename']\n# # eP.groupAndFilter()\n# # eP.metaDataValues.loc[eP.metaDataValues.index.year==2019]\neP.fileInventory\n\n\n\n\n\n\n\n\nsource\nfilename\nfile_prototype\nFilter Flags\ngroupID\n\n\nTIMESTAMP\n\n\n\n\n\n\n\n\n\n2023-06-15 00:00:00\nC:\\highfreq\\BB\\raw\\2023-06-15T000000_LI-7200.ghg\n2023-06-15T000000_LI-7200.ghg\nyyyy-mm-ddTHHMM??_LI-7200.ghg\n~\n1\n\n\n2023-06-15 00:30:00\nC:\\highfreq\\BB\\raw\\2023-06-15T003000_LI-7200.ghg\n2023-06-15T003000_LI-7200.ghg\nyyyy-mm-ddTHHMM??_LI-7200.ghg\n~\n3\n\n\n2023-06-15 01:00:00\nC:\\highfreq\\BB\\raw\\2023\\06\\2023-06-15T010000_L...\n2023-06-15T010000_LI-7200.ghg\nyyyy-mm-ddTHHMM??_LI-7200.ghg\n~\n3\n\n\n2023-06-15 01:30:00\nC:\\highfreq\\BB\\raw\\2023\\06\\2023-06-15T013000_L...\n2023-06-15T013000_LI-7200.ghg\nyyyy-mm-ddTHHMM??_LI-7200.ghg\n~\n3\n\n\n2023-06-15 02:00:00\nC:\\highfreq\\BB\\raw\\2023\\06\\2023-06-15T020000_L...\n2023-06-15T020000_LI-7200.ghg\nyyyy-mm-ddTHHMM??_LI-7200.ghg\n~\n3\n\n\n...\n...\n...\n...\n...\n...\n\n\n2024-02-04 09:00:00\n~\n~\n~\n~\n-9999\n\n\n2024-02-04 09:30:00\n~\n~\n~\n~\n-9999\n\n\n2024-02-04 10:00:00\n~\n~\n~\n~\n-9999\n\n\n2024-02-04 10:30:00\nC:\\highfreq\\BB\\raw\\2024\\02\\2024-02-04T104817_L...\n2024-02-04T104817_LI-7200.ghg\nyyyy-mm-ddTHHMM??_LI-7200.ghg\nLI7200_Filter: condition_1\n-9999\n\n\n2024-02-04 11:00:00\nC:\\highfreq\\BB\\raw\\2024\\02\\2024-02-04T111255_L...\n2024-02-04T111255_LI-7200.ghg\nyyyy-mm-ddTHHMM??_LI-7200.ghg\nLI7200_Filter: condition_1\n-9999\n\n\n\n\n11255 rows × 5 columns\neP.fileInventory=eP.fileInventory.loc[eP.fileInventory.index.year&gt;2019].copy()\n# eP.rawDataStatistics=eP.rawDataStatistics.loc[eP.rawDataStatistics.index.year&gt;2019].copy()\n# eP.metaDataValues=eP.metaDataValues.loc[eP.metaDataValues.index.year&gt;2019].copy()\n# eP.configurationGroups=eP.configurationGroups.loc[eP.configurationGroups.index.year&gt;2019].copy()\neP.saveMetadataFiles()\nfrom distutils.dir_util import copy_tree\nimport batchProcessing\nimport time\nT1 = time.time()\nd_in,d_out = 'Y:\\\\BB\\\\eddyProAPIOutputs\\\\202408221035\\\\group_6\\\\eddypro_full_cospectra','Y:\\\\BB\\\\cpTest'\n# copy_tree(d_in,d_out) &gt; Takes 541 seconds\nbatchProcessing.pasteWithSubprocess(d_in,d_out+'2',option='xcopy')\nprint('Elapsed: ',time.time() - T1)\n\nElapsed:  541.9344818592072\nimport pandas as pd\nimport os\ndf = pd.DataFrame(data={'a':[1,2],'b':[3,4]})\n# pth = 'Y://BB//metadata//BB_biometData_202405010000_202405040000.csv'\npth = 'Y://BB/metadata/test.csv'\npth = os.path.abspath(pth)\n# df.to_csv(pth,index=False)\nprint(pth)\n\nY:\\BB\\metadata\\test.csv"
  },
  {
    "objectID": "API_Run.html#example-command-line-call",
    "href": "API_Run.html#example-command-line-call",
    "title": "EddyPro API",
    "section": "Example Command Line Call",
    "text": "Example Command Line Call\n’One winmet call this before activating .venv\nSet-ExecutionPolicy Unrestricted -Scope Process\n.\\.venv\\Scripts\\activate                                                               \npy eddyProAPI.py --siteID BB --biometUser True --sourceDir Y:/BB/raw/2024/ --metaDataUpdates Y:/BB/Manual_Metadata_Updates.csv --runMode full --eddyProStaticConfig ini_files/ClosedPathStandard.eddypro\npy eddyProAPI.py --siteID BBS --biometUser True --sourceDir C:/data-dump/BBS/EC_Station/2024/ --metaDataTemplate C:/highfreq/BBS/TOA5_BBS.FLUX_2023_06_14_1500.metadata --runMode 1 --eddyProStaticConfig ini_files/OpenPathStandard.eddypro --fileType dat --timeShift 30"
  },
  {
    "objectID": "API_Run.html#run-preprocessing",
    "href": "API_Run.html#run-preprocessing",
    "title": "EddyPro API",
    "section": "Run PreProcessing",
    "text": "Run PreProcessing\n\nimport eddyProAPI\nimport importlib\nimportlib.reload(eddyProAPI)\nkwargs = {\n    'siteID':'BB',\n    'dateRange':['2024-04-15','2024-04-17'],\n    'sourceDir':\"C:/highfreq/BB/raw/2024/04\",\n    # 'reset':True,\n    'metaDataUpdates':'C:/highfreq/BB/Manual_Metadata_Updates.csv',\n    'priority':'High Priority',\n    'biometUser':True\n}\nkwargs['userDefinedEddyProSettings'] = {\n        'Project':{\n            'hf_meth':'4'\n            }}\npre = eddyProAPI.preProcessing(**kwargs)\n\nInitializing tasks for BB over: ['2024-04-15 00:00' '2024-04-17 00:00']\nSee output: C:/temp//BB/metadata//BB_biometData_202404150000_202404170000.csv\ncanopy_height missing, outputting NaNs\nSee output: C:/temp//BB/metadata//BB_dynamicMetadata_202404150000_202404170000.csv\nAll tasks completed successfully\nfileInventory {'parse_dates': [0], 'index_col': [0], 'filepath_or_buffer': 'C:/temp//BB/metadata/fileInventory.csv'}\nrawDataStatistics {'parse_dates': [0], 'index_col': [0], 'header': [0, 1, 2], 'filepath_or_buffer': 'C:/temp//BB/metadata/rawDataStatistics.csv'}\nmetaDataValues {'parse_dates': [0], 'index_col': [0], 'header': [0, 1], 'filepath_or_buffer': 'C:/temp//BB/metadata/metaDataValues.csv'}\nconfigurationGroups {'index_col': [0], 'header': [0, 1, 2], 'filepath_or_buffer': 'C:/temp//BB/metadata/configurationGroups.csv'}\nSearching C:/highfreq/BB/raw/2024/04\n[████████████████████████████████████████████████████████████] 110/110\n\nFiles Search Complete, time elapsed:  0.914\nReading Data\nReading Complete, time elapsed:  0.021\nApplying Manual Metadata Adjustments\nManual Metadata Adjustments Complete\nGrouping by Configuration\nWriting Metadata Files\nApplying Filters:\n\n Sonic_Filter :\ncondition_1\nmin variables ['Aux 1 - U (m/s)' 'Aux 2 - V (m/s)' 'Aux 3 - W (m/s)'] criteria Data.loc[groupIX,variables]&lt;-100\n(0,)\nmax variables ['Aux 1 - U (m/s)' 'Aux 2 - V (m/s)' 'Aux 3 - W (m/s)'] criteria Data.loc[groupIX,variables]&gt;100\n(0,)\n\n LI7200_Filter :\ncondition_1\nmean variables ['Flow Rate (lpm)'] criteria Data.loc[groupIX,variables]&lt;10\n(0,)\ncondition_2\nmean variables ['Average Signal Strength'] criteria Data.loc[groupIX,variables]&lt;90\n(0,)\nPre-Processing complete, time elapsed 2.711 seconds"
  }
]