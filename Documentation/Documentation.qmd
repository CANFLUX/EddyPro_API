---
title: "An Application Program Interface for Automating and Streamlining Flux Processing in EddyPro&reg;"
author: Dr. June Skeeter
bibliography: EddyProAPI.bib
format: pdf
---

# Abstract

An application program interface (API) was developed to streamline the processing of Eddy Covariance data in Eddy Pro&reg;.  The API allows users run EddyPro in parallel, high-priority batches to minimize computation times.  Preliminary testing indicates the EddyPro API can speed up processing by 67% compared using the EddyPro GUI.

# Introduction

Eddy Covariance (EC) is a method for measuring ecosystem-atmosphere fluxes of energy and trace gasses (e.g., CO_2).  Flux estimation via EC involves applying a Reynolds Operators to high frequency (>=10 Hz) measurements of scalar concentrations and 3D winds over 30- to 60-minute intervals.  This is a computationally expensive procedure, and when it must be repeated over months or years of data, it quickly becomes an incredibly time consuming procedure.

One of the most popular applications for processing EC data is EddyPro&reg; @noauthor_eddypro_2021. The application is designed to provide easy, accurate EC flux computations @li-cor_inc_eddypro_2021.  It has a graphic user interface (GUI) that allows apply a standard processing pipeline or selectively apply more advanced filtering and correction procedures as needed.  The backend of the processing pipeline is executed in FORTRAN, and EddyPro outputs half-hourly or hourly flux estimates and other supplemental data as human-readable .csv files.

While the EddyPro software application has made processing EC data more user friendly, it is still a tedious, and time consuming procedure.  The software processes files sequentially; it can take hours to execute when process multiple months worth of data or applying computationally expensive corrections (e.g., @ibrom_strong_2007; @fratini_relative_2012).  Eddy Covariance data should be processed in batches over time-periods with similar conditions (months or seasons) to allow sufficient data for spectral determining spectral corrections.  But when processing longer-time periods there substantial room for reduction of processing times via parallel computing.

Manual processing of data produces considerable room for error and divergence of processing procedures between sites and time periods.  Particularly when processing is conducted by multiple or inexperienced users in a research group (e.g., graduate students).  Reprocessing is often required after 


The EddyPro API (Application Program Interface) is a python wrapper for the EddyPro software package that allows for automation and parallel processing of flux estimation procedures.  Processing procedures can be configured using the EddyPro GUI or a text editor then dynamically implemented via the API to set the run period(s) and batch the data for processing in parallel.  

# Methods

The API consists of two parts: a pre-processing module, and the execution module.

The pre-processing module can inspect the raw data prior to flux computation.  The pre-processing module checks the metadata where available (in .ghg files), detects and tracks changes to instrumentation, orientation, calibration coefficients.  The pre-processing can also be used to "overwrite" metadata, e.g., to correct for improperly measured sensor separation.  The pre-processing procedures help to identify periods for which fluxes should not be calculated (too much missing data) and define batching procedures to ensure consistent setup within processing batches.




1. Read high frequency data in .ghg or text (.csv, .dat, etc.) format.

* This will parse all data, month by month for the BB site in the highfreq folder using four cores to speed up processing time.

* **If .ghg data** 
    * Extract the data and read relevant sub-files
    * Calculate raw half-hourly means of all input data
    * Parse and track the metadata, inspecting for changes
        * Update/correct metadata from a user-defined template as necessary

* **If other .data files**

2. Create metadata template files


### Running Eddypro

Create a .eddypro template, either using the GUI, editing one of the templates included here.  Then call EddyPro to run over a given time period - the API will handle updating the time period specific settings and partitioning the outputs by relevant period.  Where necessary, the API will separate cospectral inputs/outputs by accordingly.


