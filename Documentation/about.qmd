---
title: "An Application Program Interface for Automating and Parallelizing EddyPro&reg;"
author:
    - name: Dr. June Skeeter
      affiliations:
        - name: Natural Resources Canada
format: 
    revealjs:
        theme: default
        scrollable: true
        controls: true
        navigation-mode: linear
        controls-layout: bottom-right
        controls-tutorial: true
        slide-number: true
        show-slide-number: all
        pdfMaxPagesPerSlide: 1
        footer: <a href="https://github.com/CANFLUX/EddyPro_API">Find the repo here</a>
bibliography: EddyProAPI.bib
---


## About EddyPro&reg;


@noauthor_eddypro_2021 is one of the most popular applications for processing Eddy Covariance (EC) data.

* It designed to provide easy, accurate EC flux computations @li-cor_inc_eddypro_2021.
* Open source software with a graphic user interface (GUI)
    * Interfaces with a processing pipeline is executed in FORTRAN
    * Based on the @noauthor_eco2s_2011 package


## Advantages of EddyPro&reg;


The GUI makes flux processing accessible.

* Point and click processing without need for coding
* Users can see the wide range of methods options available
    * Links to comprehensive documentation
* Works great for processing a single season of EC data

## Disadvantages of EddyPro&reg;

Point and click processing becomes a bottle.

* New runs must be initiated each time more data comes in
    + Ample room for error when conducted by inexperienced users (e.g., research assistants)
    + Leads to delays in processing
* Long records take a long time to process, users may avoid:
    + Testing alternate methods 
    + Flux recalculation


## How the API Can Help?

The Application Program Interface (API) can be used to automate and parallelize flux processing. 

* Call the API from command line, a python script, or run in a Jupyter Notebook
    * Schedule runs at regular intervals as new data come in
    * Setup multiple runs to compare processing methods
* API will process longer in parallel to expedite processing
    * Can reduce processing time by a quarter or more


## How the API Can Help?

The Application Program Interface (API) can be help standardize flux processing. 


:::: {.columns}

::: {.column width="50%"}

* Template .eddypro files serve as the basis for a project
    * View/modify options using the GUI or a text editor
* Works with LICOR (GHG) or Cambpbell (TOA5) files

:::

::: {.column width="50%"}

![Allows for quick differentiation](images/Compare.png)

:::
::::

## How does it work?

There are two main routines in the API which will be run in sequence when calling the script.

```{bash}
cd Path\To\eddyProAPI
.\.venv\Scripts\activate
python .\eddyProAPI.py --siteID ID --fileType ghg --dateRange 2024-06-01 2024-08-31
```

## Pre-processing

* Inspect for changes in metadata
    * Identify groups of common configuration
* Parses the high frequency data to generate descriptive statistics
    * Optional pre-filtering to exclude bad data
* Generate biomet and dynamic metadata files on-the-fly
    * Reads Biomet.Net database files
    
## Processing

* Runs EddyPro&reg; over the desired time period
    * Use a template .eddypro file to ensure standardized processing
    * Appended run-specific information (inputs, directories, etc.)
* Executes raw Data processing in parallel
* Flux processing and correction applied on a per-group basis

## More Information

This project is still under development.

* I am looking for interested users to help with Beta testing


## References

::: {#refs}
:::