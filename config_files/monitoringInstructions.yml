# Use wildcard matching to identify tags in metadata files and link them to header names in data files
# Define how metadata and data files are monitored setup rules to filter/partition data
# Metadata: (rules listed below)
# Lists of keys by section which correspond to LICOR .metadata files, except Custom, which are generated by pre-processing
# Rules
#   groupBy: string values used to delineate site configurations, EddyPro runs will be partitioned by configurations
#   track: numeric values that aggregated by groups but won't raise issues if they change between timestamps
#   pass: representative value for a group is passed but statistics are not calculated
#         * Changes of these values will *NOT* impact group splits

metaData:
  groupBy:
    Site:
    - site_name
    - site_id
    Station:
    - station_name
    - station_id
    Timing:
    - acquisition_frequency
    - file_duration
    Instruments:
    - instr_*_manufacturer
    - instr_*_model
    - instr_*_sw_version
    - instr_*_id
    - instr_*_height
    - instr_*_wformat
    - instr_*_wref
    - instr_*_north_offset
    - instr_*_northward_separation
    - instr_*_eastward_separation
    - instr_*_vertical_separation
    - instr_*_vpath_length
    - instr_*_hpath_length
    - instr_*_tau
    - instr_*_tube_length
    - instr_*_tube_diameter
    - instr_*_kw
    - instr_*_ko
    FileDescription:
    - separator
    - header_rows
    - data_label
    - col_*_variable
    - col_*_instrument
    - col_*_measure_type
    - col_*_unit_in
    Custom:
    - col_*_header_name
  track:
    Site:
    - altitude
    - latitude
    - longitude
    - canopy_height
    - displacement_height
    - roughness_length
    Instruments:
    - '*_*_tube_flowrate'
  pass:
    FileDescription:
    - '*_*_min_value'
    - '*_*_max_value'
    - '*_*_conversion'
    - '*_*_unit_out'
    - '*_*_a_value'
    - '*_*_b_value'
    - '*_*_nom_timelag'
    - '*_*_min_timelag'
    - '*_*_max_timelag'
    Files:
    - data_path
    - saved_native
    - timestamp
    - iso_format
    - end_of_line
    - enable_processing
    - tstamp_end
    Project:
    - title
    - id
    - creation_date
    - last_change_date
    - start_date
    - end_date
    - file_name
    - sw_version
    - ini_version  
    Timing:
    - pc_time_settings
    
dataAggregation:
  # Will yield the following statistics for all raw traces when set to True
  # See options here: https://pandas.pydata.org/pandas-docs/stable/reference/groupby.html#dataframegroupby-computations-descriptive-stats
  mean: True
  std: True
  median: True
  max: True
  min: True
  count: True

dataFilters:
  Sonic_Filter:
    condition_1:
      variables: 
      - u
      - v
      - w
      measure_type: 
      filters:
        # Data here are aggregated statistics generated from the raw high frequency EC data
        # count: 10 # Eddypro default setting, maxiumum sample data % 
        # groupIX corresponds to the index of unique groups (as defined by metaData>groupBy above)
        # variables correspond to the list of variables defined for the corresponding condition (e.g., Sonic_Filter>condtion_1 defined above)
        # key (e.g., min, max, etc) MUST correspond to a statistic listed under dataAggregation defined above
        # filters can be given as a single string, or a list of different conditions
        min: Data.loc[groupIX,variables]<-100
        max: Data.loc[groupIX,variables]>100
  # CO2_Filter:
  #   condition_1:
  #     variable:
  #     - co2
  #     measure_type: mixing_ratio
  #     max_lack: 10 # Eddypro default setting, maxiumum sample data % 
  #     range: [350,550] # If the wind blows this hard > the tower is probably gone already

