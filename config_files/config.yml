
# These will be dynamically updated using evaluate statements
# self.config refers to the API Configuration settings (this file + all other .yml files)
# RootDirs is defined in user_path_definitions.yml
# Is a concatenation of all .yml and .ini configuration inputs
RelativePaths:
  # Path to raw EC data will be appended with YYYY/MM (Year/Month) following EddyPro's default expectation
  raw: f"{self.config['RootDirs']['Highfreq']}/{self.siteID}/raw/"
  # Metadata and Biomet data generated by preprocessing for use in EddyPro
  meta_dir: f"{self.config['RootDirs']['Outputs']}/{self.siteID}/metadata/"

# Paths:
#   Substitutions:
#   # Patterns given between ** ** can be replaced dynamically (see HelperFunctions.py)
#     read_data_dir: '**Highfreq**/**siteID**/'
#     write_data_dir: '**Outputs**/EP_API_Testing/**siteID**/'
    
#   raw_path: '**read_data_dir**/raw/**year**/**month**/'
#   biomet_path: '**read_data_dir**/biomet/**year**/'
#   # processed data output
#   meta_dir: '**write_data_dir**/metadata/'
#   eddypro_output: '**write_data_dir**/EP_Test_Runs/'

filenames:
  fileInventory: fileInventory.csv
  rawDataStatistics: rawDataStatistics.csv
  metaDataValues: metaDataValues.csv
  # biomet_file: Biomet.csv
  # raw_means: rawMeans.csv
  # dynamic_metadata: dynamicMetadata.csv
  # site_setup: siteSetup.csv
  # headers: Headers.csv
  # calibration_parameters: calibrationsParameters.csv
  # eddypro_rp: eddypro_rp.exe
  # eddypro_fcc: eddypro_fcc.exe

aggregation:
  # Will yield the following statistics for all raw traces where True
  # See options here: https://pandas.pydata.org/pandas-docs/stable/reference/groupby.html#dataframegroupby-computations-descriptive-stats
  mean: True
  std: True
  median: True
  max: True
  min: True
  count: True

# Value for missing data in text columns
naString: N/A

templates:
  variableList: ini_files/VariableNames.ini

delimiters:
  comma: ','
  tab: '\t'

ghg:
  # Regex search for dates in filename
  extension: 'ghg'
  search: '([0-9]{4}\-[0-9]{2}\-[0-9]{2}T[0-9]{6})'
  format: '%Y-%m-%dT%H%M%S'
  ep_date_pattern: yyyy-mm-ddTHHMM??


dat:
  extension: 'dat'
  search: ([0-9]{4}\_[0-9]{2}\_[0-9]{2}\_[0-9]{4})
  format: '%Y_%m_%d_%H%M'
  ep_date_pattern: yyyy_mm_dd_HHMM
  # Must provide some extra metadata when not using .ghg format
  # List of values to fill with NaNs
  na_values: 
  - NAN
  # rows to skip (start count form 0)
  skip_rows: [0,3]
  # header rows (after)
  header_rows: [0,1]


biom_timestamp:
  name: TIMESTAMP_1
  format: '%Y-%m-%d %H%M'

Calibration_Info:
  # Set to True to include (only where it exists)
  # Skipping will speed up
  readCal:  True